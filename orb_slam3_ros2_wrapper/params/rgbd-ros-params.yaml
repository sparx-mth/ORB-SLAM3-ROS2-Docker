# Add a "/" at the start of the topics to avoid namespacing
# The frame_ids are automatically namespaced in the rgbd.launch.py file.
# If the robot namespace is "robot_0" then the frame_ids become "robot_0/camera_link"

ORB_SLAM3_RGBD_ROS2:
  ros__parameters:
    # slam related
    robot_base_frame: base_footprint
    global_frame: map
    odom_frame: odom
    rgb_image_topic_name: rgb_camera
    depth_image_topic_name: depth_camera
    imu_topic_name: imu #Not used in this variant. Try RGB_IMU to use this information.
    odom_topic_name: ground_truth_pose #Used if odometry_mode parameter is set to true. (Set to ground_truth_pose for pose from simulation example. You can choose the topic you want)

    # the below parameters are used to adjust the initial pose with respect to the map. 
    # the camera pose maybe translated and rotated with respect to the base_footprint. The wrapper publishes map->base_footprint. Hence this relative transform needs to be accounted.
    # the below transform is the transform from base_footpring -> camera_link
    robot_x: 0.7
    robot_y: 0.0
    robot_z: 1.150
    robot_qx: 0.0
    robot_qy: 0.0
    robot_qz: 0.0
    robot_qw: 1.0

    visualization: true
    ros_visualization: false
    odometry_mode: false
    publish_tf: true
    map_data_publish_frequency: 1000 # publish every 1000.0 milliseconds
    do_loop_closing: true

    # traversability related
    lidar_topic_name: lidar/points
    publish_traversability_data: true # publishes the traversability grid and the occupancy map. Works only if `traversability_ros_integration` is set to false.
    traversability_ros_integration: false # if true, publishes the messages on /traversability_keyframe_additions and /traversability_keyframe_updates. If true, does not involve the traversability class within ORB_SLAM3 and must be integrated with ROS. Set it to true if you want traversability to run in a seperate process.

local_traversability_node:
  ros__parameters:
    pointcloud_topic_name: "lidar/points"
    expected_frequency: 4.0 # Hz.

traversability_threshold_node:
  ros__parameters:
    lethal_obstacle_threshold: 55 # between 0 to 100
    do_loop_closing: true
